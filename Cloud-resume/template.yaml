AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Cloud-resume

  Sample SAM Template for Cloud-resume

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: my-fanstastic-website
      AccessControl: PublicRead
      WebsiteConfiguration: 
        IndexDocument: index.html

#   MyDistribution:
#     Type: "AWS::CloudFront::Distribution"
#     Properties:
#       DistributionConfig:
#         DefaultCacheBehavior:
#           ViewerProtocolPolicy: allow-all
#           TargetOriginId: my-fanstastic-website.s3-website-us-east-1.amazonaws.com
#           DefaultTTL: 0
#           MinTTL: 0
#           MaxTTL: 0
#           ForwardedValues:
#             QueryString: false
#       Origins:
#           - DomainName: my-fanstastic-website.s3-website-us-east-1.amazonaws.com
#             Id: my-fanstastic-website.s3-website-us-east-1.amazonaws.com
#             CustomOriginConfig:
#               OriginProtocolPolicy: match-viewer
#       Enabled: "true"
      
            
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: cloud-resume-challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: arn:aws:s3:::my-fanstastic-website/*
      Bucket: !Ref MyS3Bucket
        
        

  

# Outputs:
#   ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   Find out more about other implicit resources you can reference within SAM
#   https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#   HelloWorldApi:
#     Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#   HelloWorldFunction:
#     Description: "Hello World Lambda Function ARN"
#     Value: !GetAtt HelloWorldFunction.Arn
#   HelloWorldFunctionIamRole:
#     Description: "Implicit IAM Role created for Hello World function"
#     Value: !GetAtt HelloWorldFunctionRole.Arn
